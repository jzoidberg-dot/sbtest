#!groovy
// docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'ja1'
        }
    triggers { pollSCM('* * * * *') }
	options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("docker login") {
			steps{
				withCredentials([usernamePassword(credentialsId: '07ee24b9-cc41-48e2-a7a6-975d266bac7e', usernameVariable: 'USERNAME', passwordVariable: 'PASSWROD')]) {
					sh """
					docker login -u $USERNAME -p $PASSWROD
					"""
				}
			}
		}
		stage("create docker image") {
            steps {
                echo " ========== start building ========== "
				dir ('docker/docker-flask') {
					sh 'docker build -t zoid/sbtest:flask-auto . ' 
				}
            }
        }
		stage("Run and test image") {
            steps {
                echo " ========== running and testing ========== "
				sh """
				docker run --rm --network host -d --name flask zoid/sbtest:flask-auto
				docker exec flask /test.sh
				docker stop flask-auto
				"""
				}
            }
		stage("docker push") {
            steps {
                echo " ========== pushing image ========== "
				sh """
				docker push zoid/sbtest:flask-auto
				"""
				}
            }
        }
        
}

