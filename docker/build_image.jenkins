#!groovy
// docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'ja1'
        }
    triggers { pollSCM('* * * * *') }
	options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        
		stage("create docker image") {
            steps {
                echo " ========== start building ========== "
				dir ('docker/docker-flask') {
					sh 'docker build -t zoid/sbtest:flask-auto . ' 
				}
            }
        }
		stage("Run and test image") {
            steps {
                echo " ========== running and testing ========== "
				sh """
				docker run --rm --network host -d --name flask-auto zoid/sbtest:flask-auto
				docker exec flask-auto /test.sh
				docker stop flask-auto
				"""
				}
            }
		stage("docker push") {
            steps {
                echo " ========== pushing image ========== "
				withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'PASSWORD')]) {
				sh """
				docker login -u zoid -p $PASSWORD
				docker push zoid/sbtest:flask-auto
				"""
				}
            }
        }
        
	}
}

